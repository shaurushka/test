%%%%%%%%%%%%%%%%%%%% author.tex %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% sample root file for your "contribution" to a proceedings volume
%
% Use this file as a template for your own input.
%
%%%%%%%%%%%%%%%% Springer %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\documentclass{svproc}
\usepackage{graphicx}
\usepackage{multirow}
\usepackage{hyperref}
%
% RECOMMENDED %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%

% to typeset URLs, URIs, and DOIs
\usepackage{url}
\def\UrlFont{\rmfamily}

\begin{document}
\mainmatter              % start of a contribution
%
\title{Algorithms for Adjustment of Symmetry Axis Found for 2D Shapes by the Skeleton Comparison Method}
%
\titlerunning{Algorithms for Adjustment of Symmetry Axis}  % abbreviated title (for running head)
%                                     also used for the TOC unless
%                                     \toctitle is used
%
\author{Olesia Kushnir\inst{*1} \and Oleg Seredin\inst{*2} \and Sofia Fedotova\inst{3}}
%
\authorrunning{Olesia Kushnir et al.} % abbreviated author list (for running head)
%
%%%% list of authors for the TOC (use if author list has to be modified)
\tocauthor{Olesia Kushnir, Oleg Seredin, and Sofia Fedotova}
%
\institute{Tula State University, Tula, Russia\\
\email{$^1$kushnir-olesya@rambler.ru, $^2$oseredin@yandex.ru,\\ $^3$fedotova.sonya@gmail.com}
%\\ WWW home page:
%\texttt{http://users/\homedir iekeland/web/welcome.html}
}

\maketitle              % typeset the title of the contribution

\begin{abstract}
Reflection symmetry detection for 2D shapes is a well-known task in Computer Vision, but there is a limited number of efficient and effective methods for its solution. Our previously proposed approach based on pair-wise comparison of sub-sequences of skeleton primitives finds the axis of symmetry within few seconds. In order to evaluate the value of symmetry relative to the found axis we use the Jaccard similarity measure. It is applied to the pixels subsets of a shape which are split by the axis. Often an axis found by the skeleton comparison method diverges more or less from the ground-truth axis found by the method of exhaustive search among all the potential candidates. That is why the algorithms that allow adjusting the axis found by the fast skeleton method are proposed. They are based on the idea of searching the axis which is located near the seed skeleton axis and has greater Jaccard similarity measure. The experimental study on the ``Flavia'' and ``Butterflies'' datasets shows that proposed algorithms find the ground-truth axis (or the axis which has slightly less Jaccard similarity value than the ground-truth axis) in near real time. It is considerably faster than any of the optimized brute-force methods.
% We would like to encourage you to list your keywords within
% the abstract section using the \keywords{...} command.
\keywords{reflection symmetry, binary image, sub-sequences of skeleton primitives, adjustment algorithms}
\end{abstract}
%
\section{Introduction}
%
When analyzing binary shapes we will see that some objects, both of artificial and natural origin, possess reflection (axial) symmetry. It is obvious that real-world images can rarely be absolute reflection-symmetric. Thus, it is valuable to detect approximate reflection symmetry and evaluate the symmetry measure of a shape (see Fig.~\ref{fig:SymmetryExamples}). Symmetry assessment can be used in many computer vision applications such as the analysis of plants growing conditions or tumor detection in medical imaging.

The task of symmetry detection and symmetry measure evaluation for 2D shapes is well-known, but there is a limited number of effective and efficient methods for its solution based on: 1) Fourier series expansion of parametric contour representation~\cite{vanOterloo1988}, 2) contour representation by turning function~\cite{Sheynin1999}, 3)~contour representation by critical points and computation of similarity measure for two sub-contours via vectors of geodesic distances~\cite{Yang2008}, 4) model of Electrical Charge Distribution on the Shape (ECDS)~\cite{Li2014}, 5) Boundary-Skeleton Function (BSF)~\cite{Niu2015}, 6) pair-wise comparison of sub-sequences of skeleton primitives~\cite{Kushnir2016}. Most of these methods are based on known algorithms evaluating dissimilarity (or similarity) of shapes.

All the efficient methods of symmetry detection are approximate; therefore, the axis of symmetry found by them can be adjusted. The idea of symmetry axis adjustment constitutes the novelty of the proposed work. In this paper we are going to adjust the results of the fast method based on pair-wise comparison of sub-sequences of skeleton primitives~\cite{Kushnir2016}. The adjustment algorithms utilize the exhaustive search algorithm principles for reflection symmetry axis detection~\cite{Kushnir2016}.

The developed methods were experimentally studied on the known ``Flavia'' dataset~\cite{Wu2007} and the dataset of butterflies images; the experimental results are shown in Sect.~\ref*{ExperimentalStudy}. The paper concludes with some discussions on the results and further work.

\begin{figure}
	%\vspace{0.5cm}
	\center{\includegraphics[width=0.8\linewidth]{Figures/SymmetryExamples}}
	\caption{Examples of images with higher (top) or lower (bottom) value of symmetry measure}
	\label{fig:SymmetryExamples}
\end{figure}

%
\section{Related Work}\label{RelatedWork}
%
There is a number of methods for fast approximate search of reflection symmetry axis and the symmetry value for binary images in the literature. Most of them are based on the certain algorithms of shape matching and (dis)similarity measure evaluation. Nevertheless, those algorithms are modified because they are applied not to different shapes but to the two parts of a shape. A shape is divided into two parts by a line, similarity of two parts is referred to as their mirror similarity with respect to that line. The line which divides a shape into two most similar parts is taken as a desired symmetry axis.

Proposed in~\cite{vanOterloo1988} method of reflection symmetry detection is based on parametric contour representation. Several variants of information-preserving parametric contour representation are provided. The normalized to $ 2\pi $ arc length, or perimeter of polygonal contour, is used as a parameter. Fourier series expansion is applied to the representation. Achieved Fourier coefficients of different contours can be compared by calculating their mutual distance. Based on such a method, pair-wise dissimilarity measure of shapes or approximate asymmetry measure of a shape could be calculated.

The approach for reflection symmetry detection suggested in~\cite{Sheynin1999} is based on the method of polygonal shapes comparison proposed in~\cite{Arkin1989}, where the shape contour is normalized to a unity and represented by a turning function. A turning function is a periodic parametric contour representation. The drawback of such representation is high sensitivity to noise in the boundary. Therefore preliminary smoothing of the boundary might be useful when this representation is used for comparing shapes. The scaling, translation, and rotation invariant dissimilarity metric for any two turning functions is introduced. Based on this metric the similarity measure for two shapes is obtained. This measure could be used in symmetry measure calculation because it will be the maximum of all possible similarity measures between the contour of the shape and the same contour reflected relatively to all possible lines. The line which gives the maximum similarity will be the axis of the symmetry.

According to the approach stated in~\cite{Yang2008} a figure contour is represented as a set of critical points~\cite{Latecki1999}. This set captures all the information required for detecting the dissimilarities of contours. The set is computed using Discrete Curve Evolution (DCE) method~\cite{Latecki1999}. Then the set is divided into two parts. The parts that minimize the dissimilarity value, i.e., maximize self-similarity, are used to define the main similarity axis, which corresponds to the main axis of reflection symmetry for many shapes. Proposed dissimilarity measure is motivated by inner distance (or geodesic distance) introduced in~\cite{Ling2007}. The advantage of geodesic distance is that it is insensitive to the articulation of parts. This property could be very important for computing approximate reflection symmetry measures.

The inner distance is also used in~\cite{Li2014}, where the Electrical Charge Distribution on the Shape (ECDS) is calculated on its basis to find the axis of symmetry. The ECDS is invariant to isometric transformation, so the symmetry detection method can deal with extrinsic and intrinsic symmetry. Then, the reflection symmetry detection problem in the shape space is transformed to a horizontal lines (i.e. rows with all zeros) detection problem in a local similarity matrix which is formed from differences between corresponding electrical charges of the shape relative to all potential symmetry axes. The horizontal lines of different lengths in a similarity matrix indicate global and local reflection symmetry parts of shapes.

It is worth noting that all above-mentioned methods of reflection symmetry detection are based on contour representation of a shape. The two following methods are based on both the skeleton~\cite{Blum1967} and the boundary representation of a shape.

The outline of the method proposed in~\cite{Niu2015} is following: firstly, the skeleton of the input 2D shape is computed and a number of equidistant points from the shape boundary is sampled. Then, a 1D function is constructed to describe a 2D shape. This function is called Boundary-Skeleton Function (BSF); it is defined as the minimal inner-distances between the boundary sample points and the skeleton. Since the inner-distances are intrinsic properties of a shape, the BSF is isometric invariant and robust to boundary noise. Then, the local extrema of the BSF are computed; they partition the function into a number of curved segments. Each segment is characterized by a feature vector that captures local features of the BSF. Finally, reflection symmetry in a shape is detected upon matching the curved segments of the function. However, the experimental study in~\cite{Niu2015} was made on a small number of simple artificial shapes; it is not clear how the method performs on natural approximately symmetrical objects with occlusions, protrusions, and so on.

The method of symmetry axis searching proposed in~\cite{Kushnir2016} uses the procedure of pair-wise skeletons comparison where skeletons of binary images are encoded by chains of primitives~\cite{Kushnir2014,Kushnir2015}. To get a chain of primitives, a skeleton has to be traversed counterclockwise. Each primitive represents a traversed skeleton edge and has at least two normalized values -- the length of the skeleton edge and the angle between the current and next edges. Rescaling of the length is done by the diameter of the minimum circle circumscribed about the skeleton. The angle is normalized by $2\pi $.

To obtain more complex and precise shape representation it is proposed to incorporate a vector of Legendre coefficients ${\bf{p}} = \left\{ {{p_0},\dots,{p_n}} \right\}$ as the third component in a primitive. Legendre coefficients encode the radial skeleton function of each skeleton edge~\cite{Kushnir2014}. This function determines the width, or contour, of a shape along the skeleton edges. So, each primitive becomes a three-component vector ${\bf{\omega }} = \{ l,\alpha ,{\bf{p}}\} $. The chain representation of the skeleton is invariant under translation, rotation, and scaling. For two primitive chains the optimal alignment could be calculated and dissimilarity measure can be evaluated for the corresponded images as described in \cite{Kushnir2015}.

For the reflection symmetry detection task a skeleton has to be divided into two parts~-- the ``left'' and the ``right'' sub-skeletons. The left part has to be traversed counterclockwise and the right one -- in clockwise direction. As a result, the ``left'' and the ``right'' primitive sub-chains are obtained; they could be compared by the shape matching procedure based on pair-wise alignment of primitive chains~\cite{Kushnir2014,Kushnir2015}. Thus, the most similar parts of a skeleton among all possible ones correspond to the most similar parts of a shape which are considered reflection symmetric parts. The start and the end points of a skeleton division into ``left'' and ```right'' parts can be regarded as points belonging to the symmetry axis of a shape.

%
\section{The Symmetry Function of a Shape}\label{SymmetryFunction}
%

The exact symmetry estimation algorithm based on pair-wise exhaustive search of shape outer contour points was proposed in~\cite{Kushnir2016}. Lines are drawn through the all possible pairs of points, each line is considered a potential symmetry axis which divides a shape into two parts; each part is represented as a set of pixels. The similarity between two sets is evaluated by using the Jaccard measure (for binary sets it is also known as Tanimoto): \[{\mu _T}(B) = \frac{{\left| {S(B) \cap S({B_r})} \right|}}{{\left| {S(B) \cup S({B_r})} \right|}},\]
where $ B $ is the binary image, the brightness of black pixels is coded by 1, and the brightness of white ones is coded by 0; $ B_r $ is the reflection of the binary image $ B $ with respect to a line, $ S(B) $ is the set of pixels belonging to the image~$B$, the brightness of which is equal to $1$.

The line which divides a shape into two most similar sets (the value of Jaccard measure for them is maximum) is considered the sought-for symmetry axis of a shape. As the algorithm of exhaustive search is very time consuming, its two accelerated versions have been proposed -- the optimization taking into account semi-perimeter of a shape, and the optimization with respect to the center of mass of a shape~\cite{Kushnir2016}.

Let us now introduce the concept of a \textit{symmetry function} as a function of two arguments that takes a pair of contour points and computes the Jaccard measure relative to the straight line drawn through these points. This measure will be the symmetry measure of the shape evaluated relative to the straight line drawn through specified points on the axis. Figure~\ref{fig:SymmetryFunctions} illustrates the fact that the symmetry function has many local extrema, which leads to impossibility of using gradient methods to identify the symmetry axis (axes) of a shape.

\begin{figure}[t]
	%\vspace{0.5cm}
	\center{\includegraphics[width=0.9\linewidth]{Figures/SymmetryFunction}}
	\caption{Examples of binary images and corresponding surfaces formed by the values of Jaccard measure calculated for all $N \cdot (N - 1)/2$  pairs of contour points}
	\label{fig:SymmetryFunctions}
\end{figure}

%
\section{Adjustment of Reflection Symmetry Axis Found by the Fast Numeric Method Based on the Skeleton Representation}\label{AdjustmentAlgorithms}
%

It is obvious that the methods mentioned in Sect.~\ref{RelatedWork} are based on numeric procedures and obtain approximate solutions. Here we investigate the possibility of adjusting the symmetry axis found by the fast skeleton method~\cite{Kushnir2016}. Preliminary study has shown that the axis found by the skeleton comparison algorithm usually gives a smaller value of symmetry measure in comparison to the axis obtained by exhaustive search algorithm, which always gives the maximum value of the symmetry measure for the same image. Nevertheless, the skeleton axis is located in a way that it crosses the shape contour in an $\varepsilon $-neighborhood of each one of the intersection points of the exact ground-truth symmetry axis with this shape contour. Thus, the proposed approach is that we adjust axis found by the skeleton method, i.e. find a line in its neighborhood, which gives a value of symmetry measure larger than the value of symmetry measure corresponding to adjusted axis. This way, we will improve the accuracy of the skeleton method within a reasonable time.

We shall call the adjusted skeleton axis \textit{seed axis}; and any candidate axis in searching process is \textit{probe} one. The symmetry axis necessarily crosses the object contour, so we consider only the boundary points of the shape to get probe axes. The image boundary image is represented by a sequence of points numbered from 0 to $ N-1 $.

%
\subsection{The First Version of the Axis Adjustment Algorithm}
%

\begin{enumerate}
\item The seed axis is defined by two points ${p_1}$ and ${p_2}$ of shape contour intersection with the symmetry axis found by the skeleton method.

\item Specify two contour points that bound pre-defined $\varepsilon $-neighborhood of the first point along the contour: $a = {p_1} - \varepsilon $, $b = {p_1} + \varepsilon $. These two points ($a$ and $b$) limit the finite set of some contour points $[a;b]$. Specify two contour points that bound pre-defined $\varepsilon $-neighborhood of the second point along the contour: $c = {p_2} - \varepsilon $, $d = {p_2} + \varepsilon $. These two points ($c$ and $d$) limit the finite set of some contour points $[c;d]$.

\item On the segments $[a;b]$ and $[c;d]$ select two sets of equidistant points  $Q = \{ {q_i} = a + h \cdot i,i = 0,..,n\} $, $S = \{ {s_i} = c + h \cdot i,i = 0,..,n\} $ , where $n$ is the number of parts which segments are broken into, $h$ is the stride of partition, which is calculated as an integer part of $\frac{{2\varepsilon }}{n}$.

\item Iterate through all pairs of the points belonging to sets $Q$ and $S$ obtained in step 3. This iteration defines $l = \left| Q \right| \cdot \left| S \right|$ probe straight lines. Calculate the symmetry measure relative to each obtained probe line, i.e. axis; store one of them for which the maximum value of symmetry measure is obtained.

\item If the stride $h$ is bigger than 1, two contour points ${p'_1}^{}$ and ${p'_2}^{}$, belonging to the straight line which gives the maximum value of symmetry measure, are passed to step 2: ${p_1}: = {p'_1}^{}$, ${p_2}: = {p'_2}^{}$, $\varepsilon : = h$, otherwise go to step 6.

\item If any of the points $a,b,c,d$ belongs to the obtained line, this line is declared the seed one and its points ${p'_1}^{}$ and ${p'_2}^{}$ are passed to step 2, otherwise this line is a sought-for symmetry axis.
\end{enumerate}

The basic concepts of the algorithm are illustrated in Fig.~\ref{fig:FirstAdjustmentAlgorithm}. It is worth noticing that the proposed algorithm always finds the axis, which gives the symmetry measure that is not less than the measure obtained by the skeleton method.

\begin{figure}
	%\vspace{0.5cm}
	\center{\includegraphics[width=0.5\linewidth]{Figures/FirstAdjustmentAlgorithm}}
	\caption{An example of selecting the equidistant points set according to the first variant of the algorithm (red axis is the axis obtained by the skeleton method; yellow dotted line is one of the probe axes)}
	\label{fig:FirstAdjustmentAlgorithm}
\end{figure}

%
\subsection{The Second Version of the Axis Adjustment Algorithm}
%

It is well known that the symmetry axis must pass through the center of mass of the absolutely symmetric shape. We used this fact to optimize the first variant of the adjustment algorithm. As a rule, the axis of the approximately symmetric shape does not pass exactly through the center of mass, but in its neighborhood, which we will consider a circle with center coinciding with the center of mass of the shape. The radius $R$ of this circle is calculated as ${k_R} \cdot D$, where $D$ is the distance from the center of mass to the outermost contour point, ${k_R}$ is the coefficient of proximity to the center of mass. If we have a priori knowledge about the good quality of the seed axis, it will be enough to examine only those probe axes that locate within the radius $R$ from the center of mass specified through the parameter ${k_R}$. Only them cross the circle with radius $R$ centered at the center of mass. Some of the straight lines will be excluded from the searching process, the measure of symmetry for them will not be calculated, and thus, execution time of the method will be reduced.

%
\subsection{The Third Version of the Axis Adjustment Algorithm}
%

The main peculiarity of the third version is the initial selection of adjustment areas, which is performed in a following way. The seed axis is defined by two intersections with the contour points ${p_1}$ and ${p_2}$. Tangents to a circle with radius $R$ and center at the center of mass are traced from these points as shown in Fig.~\ref{fig:ThirdAdjustmentAlgorithm}. Two pairs of tangents limit two finite sets of contour points $[a;b]$ and $[c;d]$. The adjustment process will be implemented on these sets similar to what was done in the second version of the algorithm.

\begin{figure}[h]
	%\vspace{0.5cm}
	\center{\includegraphics[width=1.0\linewidth]{Figures/ThirdAdjustmentAlgorithm}}
	\caption{Construction of tangents to the circle from the points ${p_1}$ and ${p_2}$}
	\label{fig:ThirdAdjustmentAlgorithm}
\end{figure}

This method provides a flexible choice of both the search intervals on the shape contour, and the length of this interval by setting the value of the only parameter ${k_R}$.

\emph{Remark 1.}

\emph{Segments $[a;b]$ and $[c;d]$ can be of different sizes. So the strides of selection of equidistant points could vary. This implies that the algorithm completes its execution only when the stride on both the first and the second segment is~equal~to~1.}

\emph{Remark 2.}

\emph{If the seed axis does not intersect the circle with center of mass and radius~$R$; and the point ${p_1}$ lies outside the interval $[a;b]$, the interval is expanded to the point ${p_1}$. Similarly, if the point ${p_2}$ lies outside the interval $[c;d]$, the interval is expanded to the point ${p_2}$.}

%
\section{Experimental Study}\label{ExperimentalStudy}
%

The developed methods were experimentally studied on two image datasets. The first one is the known "Flavia" image dataset~\cite{Wu2007} consisting of 32 classes of images. We have selected 5 classes for our experiments; their numbers are: 4, 8, 18, 30, and 32, each class contains from 52 to 72 images with resolution of 800 by 600 pixels. The second dataset is "Butterflies" image dataset (accessible at     \url{http://lda.tsu.tula.ru/papers/Butterflies.zip}). It contains 30 images with resolution of 400 by 600 pixels which were taken from the public Internet resource (see \url{http://bank.ankor.ge/0-butterflies-1}). All images selected for our experiments were binarized.

%
\subsection{Quality and Speed Assessment of the Proposed Algorithms}
%

In our experiments the value $n$ was equal to 10, and the parameters $\varepsilon $ and ${k_R}$ were varied. In Fig.~\ref{fig:AlgorithmsQualityTable} the following estimations for each class of images are presented: the root-mean-square deviation (RMSD) between the symmetry measure after adjustment and the ground-truth symmetry measure; the maximum deviation and the number of deviations in a class that are three times as much as the RMSD; the average processing time (considering only adjustment time, without searching of a seed axis) per image in seconds. Best results for each row are marked with bold.

\begin{figure}[t!]
	%\vspace{0.5cm}
	\center{\includegraphics[width=1.0\linewidth]{Figures/AlgorithmsQualityTable}}
	\caption{Experimental results on quality and speed of adjustment algorithms}
	\label{fig:AlgorithmsQualityTable}
\end{figure}

In Fig.~\ref{fig:AdjustmentExamples} we demonstrate some samples of adjustment~-- in the top row the skeleton and the red seed axis obtained by the skeleton method are shown for each image; in the bottom row the red seed axis and the yellow axis obtained by the proposed adjustment method are shown. For all sample images the adjusted axis coincides with the ground-truth one.

\begin{figure}[t!]
	%\vspace{0.5cm}
	\center{\includegraphics[width=0.9\linewidth]{Figures/AdjustmentExamples}}
	\caption{Examples of axis adjustment: in the top row the axis obtained by the skeleton method (red)) is shown; in the bottom row~-- the adjusted axis (yellow).
	In all cases, the adjusted axis coincides with the ground-truth axis}
	\label{fig:AdjustmentExamples}
\end{figure}

Figure~\ref{fig:AdjustmentExamples} also illustrates the necessity of adjustment procedure applying to the results of approximate methods of reflection symmetry detection, particularly, for the skeleton comparison method~-- the skeleton symmetry axis is located more or less far from the ground-truth axis in most cases (see also experimental results in~\cite{Kushnir2016}).

As has been already mentioned, the idea of symmetry axis adjustment draws up the novelty of this paper. It seems there haven't been any works about adjustment of a symmetry axis found by a numerical approximate method before. Thus, we can not compare our experimental results to the ones of some similar methods.

As seen from Fig.~\ref{fig:AlgorithmsQualityTable}, the first algorithm is outperforms two others in quality, but the second and the third algorithm outperform it in speed. The second algorithm has good quality results on images with rather simple smooth contour, but if the shape boundary is complicate, the second algorithm is beaten by the first one. So, we could recommend the second algorithm as a compromise solution. The combination of parameters ${k_R} = 0.05$ and $\varepsilon  = 0.125N$ fits our experimental data rather well. But it can not be regarded as a general recommendation.

Symmetry Measure columns in Fig.~\ref{fig:ParallelResultsTable} show quality of the second algorithm on "Butterflies" dataset. For 9 out of 30 images adjusted axis does not coincide with ground-truth one (marked by red-filled cells) but very close to it (see Fig.~\ref{fig:NonCoinsideAxesOnButterflies}). An inexact final decision depends on bad seed axis or too complicated contour configuration in the search area (feelers of butterflies).

\begin{figure}[t!]
	%\vspace{0.5cm}
	\center{\includegraphics[width=1\linewidth]{Figures/ParallelResultsTable}}
	\caption{Experimental results on performance speedup}
	\label{fig:ParallelResultsTable}
\end{figure}

\begin{figure}[t]
	%\vspace{0.5cm}
	\center{\includegraphics[width=.6\linewidth]{Figures/NonCoinsideAxesOnButterflies}}
	\caption{Images from ``Butterflies'' database for which adjusted axis does not coincide with ground-truth one (green~-- ground-truth axis, red~-- seed axis, yellow~--- adjusted axis)}
	\label{fig:NonCoinsideAxesOnButterflies}
\end{figure}

%
\subsection{Performance Speedup with Parallelization}
%
Our further efforts were made to study the possibility of speeding up the adjustment procedure in order to utilize it in real time. Three versions of adjustment algorithm have some resources of internal parallelism, connected with search of all probe lines in a neighborhood and calculation the corresponding values of the symmetry measure. These operations are independent and can be performed concurrently for different probe lines.

We have parallelized the second version of adjustment algorithm for a conventional personal multi-core computer using OpenMP~\cite{Michael2004} as the parallel programming technology. It is designed for shared memory systems and provides convenient tools for manipulating threads within a single application.

The parallel realization was tested on a PC with Intel Xeon CPU E5606 @ 2.13~GHz, 2~processors, 12~GB RAM. The program was run on 30 images from ``Butterflies'' dataset with the seed symmetry axes calculated by skeleton comparison procedure~\cite{Kushnir2015,Kushnir2016}. Figure~\ref{fig:ParallelResultsTable} demonstrates ground-truth values of symmetry measures obtained by exhaustive search brute-force algorithm, processing time of each image for exhaustive search algorithm, values of symmetry measures obtained by adjustment algorithm, processing time of each image for sequential and parallel versions, and achieved speedup. Adjustment algorithm with parameters ${k_R} = 0.03$, $\varepsilon  = 0.25N$ was tested on 2, 4, 6 and 8 threads. Thus, involvement of parallel computations leads to additional increase in productivity and reducing the processing time to hundreds of milliseconds.


%
\section{Discussion and Conclusion}\label{DiscussionAndConclusion}
%
The proposed method allows adjusting the symmetry axis of a binary image, found by the pair-wise comparison of skeleton primitives sub-sequences that encode the shape skeleton. The experimental results show that adjusted axis either coincides with the ground-truth one or its deviation from the ground-truth axis is extremely small in most cases. The proposed algorithm failed to achieve good-enough solution for some images that can be explained by the wrong seed axis location. Moreover, the results on "Butterflies" dataset show that if the processed images have high value of the reflection symmetry measure (more than 0.9), the appropriate solution has to be found because the skeleton method gives a very good seed axis for such images.

There are some images, for which the axis found by the pair-wise comparison of skeleton primitives sub-chains is significantly different from the axis found by the exhaustive search (see Fig.~\ref{fig:AxesDifferences}, the axis obtained by exhaustive search is marked by the green dashed line). However, from the expert's point of view, the position of the axis obtained by exhaustive search does not seem reasonable. But the axis found by the skeleton method, is located where it is expected. This fact needs to be examined in details in order to develop more sophisticated methods for calculating ground-truth reflection symmetry axis, combining the Jaccard measure with the contour approaches.

\begin{figure}[t]
	%\vspace{0.5cm}
	\center{\includegraphics[width=1.0\linewidth]{Figures/AxesDifferences}}
	\caption{Examples of images for which the axis of symmetry found by the exhaustive search (green dashed line) is significantly different from the axis found by the skeletons comparison method (red line) and the adjusted axis (yellow line)}
	\label{fig:AxesDifferences}
\end{figure}

It should be noted however, that the expert's opinion for the images from the 28 class of the ``Flavia'' dataset does not match any solution~-- neither the one obtained by the skeleton method, nor the one obtained by exhaustive search (see Fig.~\ref{fig:ExpertAxis}, the expert's axis is marked by the dotted blue line). But the shape of leaves in this class is quite specific; it is not reflection-symmetric as ordinarily understood, so this could be the explanation of such multi-valued results.

\begin{figure}[t]
	%\vspace{0.5cm}
	\center{\includegraphics[width=0.6\linewidth]{Figures/ExpertAxis}}
	\caption{An example of the image for which axes of symmetry obtained by the exhaustive search (green dashed line) and the skeleton comparison method (red line) are significantly different from the expert symmetry axis (dotted blue line). Symmetry measure is shown for the each axis}
	\label{fig:ExpertAxis}
\end{figure}

In comparison with the results obtained earlier by using optimized methods of exhaustive search, we have managed to speed up the procedure significantly. In~\cite{Kushnir2016} the average processing time of optimized exhaustive search methods was about 300--500 seconds per image; and the processing time for skeleton comparison method was about 1--1.5 seconds per image. The proposed adjustment methods developed with parallelization takes hundreds of milliseconds to find the ground-truth (or close to it) symmetry axis. Thus, the total time of symmetry axis search, taken by the skeleton comparison method and then the adjustment method, allows reducing the processing time to 1.5--2 seconds per image. Further efforts will be made to speed up the procedure to dozens of milliseconds in order to utilize it in real time.

The results of the research project are published with the financial support of Tula State University within the framework of the scientific project No~2017-19.


% ---- Bibliography ----
%
\begin{thebibliography}{61}
%
\bibitem{Arkin1989}
Arkin, E. M., Chew, L. P., Huttenlocher, D. P., Kedem, K., Mitchell, J. S.: 
An efficiently computable metric for comparing polygonal shapes. 
Technical report, CORNELL UNIV ITHACA NY DEPT OF COMPUTER SCIENCE (1989).
doi: {10.21236/ada210105}

\bibitem{Blum1967}
Blum, H.: 
A transformation for extracting new descriptors of shape.
Models for the perception of speech and visual form {\bf 19}(5), 362--380 (1967)

\bibitem{Kushnir2014}
Kushnir, O., Seredin, O.: 
Parametric Description of Skeleton Radial Function by Legendre Polynomials for Binary Images Comparison.
In: International Conference on Image and Signal Processing, pp.~520--530. Springer International Publishing (2014). 
doi:{10.1007/978-3-319-07998-1\_60}
	
\bibitem{Kushnir2015}
Kushnir, O., Seredin, O.: 
Shape Matching Based on Skeletonization and Alignment of Primitive Chains.
In: International Conference on Analysis of Images, Social Networks and Texts, pp.~123--136. 
Springer International Publishing (2015).
doi:{10.1007/978-3-319-26123-2\_12}

\bibitem{Kushnir2016}
Kushnir, O., Fedotova, S., Seredin, O., Karkishchenko, A.:
Reflection Symmetry of Shapes Based on Skeleton Primitive Chains.
In: International Conference on Analysis of Images, Social Networks and Texts, pp.~293--304. Springer, Cham (2016).
doi:{10.1007/978-3-319-52920-2\_27}

\bibitem{Latecki1999}
Latecki, L. J., Lak\"{a}mper, R.: 
Convexity rule for shape decomposition based on discrete contour evolution.
Computer Vision and Image Understanding {\bf 73}(3), 441--454  (1999).
doi: {10.1006/cviu.1998.0738}

\bibitem{Li2014}
Li, Z., et al. 
Robust symmetry detection for 2D shapes based on electrical charge distribution.
Journal of Information and Computational Science {\bf 11}(9), 2887--2894 (2014).
{doi:10.12733/jics20103838}

\bibitem{Ling2007}
Ling, H., Jacobs, D. W.: 
Shape classification using the inner-distance.
IEEE transactions on pattern analysis and machine intelligence {\bf 29}(2), 286--299 (2007).
{doi:10.1109/TPAMI.2007.41}

\bibitem{Michael2004}
Quinnn, M.J.: 
Parallel Programming in C with MPI and OpenMP. 544~p. McGraw-Hill, Dubuque, IA (2004)
	
\bibitem{Niu2015}
Niu, D., et al.: 
A Novel Approach for Detecting Symmetries in Two-dimensional Shapes.
Journal of Information and Computational Science {\bf 12}(10), 3915--3925 (2015).
{doi:0.12733/jics20106437}

\bibitem{vanOterloo1988}
Van Otterloo, P. J.: 
A contour-oriented approach to digital shape analysis. Doctoral thesis. Technische Universiteit Delft (1988).
URL \url{http://resolver.tudelft.nl/uuid:57b1b232-1c35-4395-a079-8bdd084fe5b3}

\bibitem{Sheynin1999}
Sheynin, S., Tuzikov, A., Volgin, D.: 
Computation of symmetry measures for polygonal shapes.
In: International Conference on Computer Analysis of Images and Patterns, pp. 183--190. Springer Berlin Heidelberg (1999).
{doi:10.1007/3-540-48375-6\_23}

\bibitem{Yang2008}
Yang, X., et al.: Symmetry of shapes via self-similarity.
In: Advances in Visual Computing, pp.~561--570. Springer Berlin Heidelberg (2008).
{doi:10.1007/978-3-540-89646-3\_55}

\bibitem{Wu2007}
Wu, S. G., et al.: 
A leaf recognition algorithm for plant classification using probabilistic neural network. 
In: 2007 IEEE international symposium on signal processing and information technology, pp. 11--16. IEEE (2007).
{doi:10.1109/ISSPIT.2007.4458016}

\end{thebibliography}
\end{document}
